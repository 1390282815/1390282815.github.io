<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>�������ƽ���BLOG</title>
  
  <subtitle>һ������OIER</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-20T19:45:11.697Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>�������ƽ�</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动规笔记P2051中国象棋</title>
    <link href="http://yoursite.com/2019/04/21/%E5%8A%A8%E8%A7%84%E7%AC%94%E8%AE%B0P2051%E4%B8%AD%E5%9B%BD%E8%B1%A1%E6%A3%8B/"/>
    <id>http://yoursite.com/2019/04/21/动规笔记P2051中国象棋/</id>
    <published>2019-04-20T19:32:21.000Z</published>
    <updated>2019-04-20T19:45:11.697Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动规笔记"><a href="#动规笔记" class="headerlink" title="动规笔记"></a>动规笔记</h1><h2 id="————P2051-中国象棋"><a href="#————P2051-中国象棋" class="headerlink" title="————P2051 中国象棋"></a>————P2051 中国象棋</h2><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="https://www.luogu.org/problemnew/show/P2051" target="_blank" rel="noopener">题目</a></h2><hr><h1 id="提取信息"><a href="#提取信息" class="headerlink" title="提取信息"></a>提取信息</h1><pre><code>有一个(n , m)的棋盘在其中h放置棋子，每行每列不超过2个，有多少种放法</code></pre><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><h3 id="1-暴力"><a href="#1-暴力" class="headerlink" title="1.暴力"></a>1.暴力</h3><h3 id="2-状压"><a href="#2-状压" class="headerlink" title="2.状压"></a>2.状压</h3><h3 id="3-正解"><a href="#3-正解" class="headerlink" title="3.正解"></a>3.正解</h3><h1 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h1><pre><code>暴力枚举，30pt。</code></pre><h1 id="状压"><a href="#状压" class="headerlink" title="状压"></a>状压</h1><pre><code>不是很适合，要用3进制状压，且状态与之前所有行有关联，3^100是压不动的。可以拿50pt。</code></pre><h1 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h1><pre><code>可以发现前i - 1行，棋子摆放的位置是不会影响到第i行的决策，有影响的只有前i行，有多少列棋子数为0 ，1 ，2。可设出状态f[i//放了i行的棋子][j//棋子数为1的列的个数][k//棋子数为2的列的个数]之后的转移方程就比较容易推了，在第i行，考虑放0 ，1 ，2个棋子，放在棋子数为0 ，1 ，2的列中。具体看代码：</code></pre><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    #include&lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">    #define FOR(a , b , c) for (int a = b; a &lt;= c; a++)</span><br><span class="line"></span><br><span class="line">    using namespace std;</span><br><span class="line"></span><br><span class="line">    const int M = 9999973;</span><br><span class="line"></span><br><span class="line">    long long n , m , ans , f[107][107][107];</span><br><span class="line"></span><br><span class="line">    int main () &#123;</span><br><span class="line"></span><br><span class="line">    scanf (&quot;%lld %lld&quot; , &amp;n , &amp;m);</span><br><span class="line"></span><br><span class="line">    f[0][0][0] = 1; //初始化</span><br><span class="line"></span><br><span class="line">    FOR(i , 1 , n) FOR(j , 0 , m) FOR(k , 0 , m - j) &#123;</span><br><span class="line"></span><br><span class="line">    f[i][j][k] += f[i - 1][j][k]; //不放棋子</span><br><span class="line"></span><br><span class="line">    if (j &gt;= 1) f[i][j][k] += ((m - (j - 1) - k) * f[i - 1][j - 1][k]) % M; //放一个在棋子数为0的列</span><br><span class="line"></span><br><span class="line">    if (j + 1 &lt;= m &amp;&amp; k &gt;= 1) f[i][j][k] += ((j + 1) * f[i - 1][j + 1][k - 1]) % M; //放一个在棋子数为1的列</span><br><span class="line"></span><br><span class="line">    if (j &gt;= 2) f[i][j][k] += (((m - (j - 2) - k) * (m - (j - 1) - k) / 2) * f[i - 1][j - 2][k]) % M; //放二个棋子都在棋子数为0的列</span><br><span class="line"></span><br><span class="line">    if (j + 2 &lt;= m &amp;&amp; k &gt;= 2) f[i][j][k] += (((j + 2) * (j + 1) / 2) * f[i - 1][j + 2][k - 2]) % M; //放二个棋子都在棋子数为1的列</span><br><span class="line"></span><br><span class="line">    if (k &gt;= 1 &amp;&amp; j &gt;= 1) f[i][j][k] += (j * (m - (j - 1) - k) * f[i - 1][j][k - 1]) % M;</span><br><span class="line">//放二个棋子在棋子数为1 ，0的列</span><br><span class="line">    &#125; </span><br><span class="line">    FOR(j , 0 , m) FOR(k , 0 , m - j) ans = (ans + f[n][j][k]) % M; //取进行到n行的所有状态</span><br><span class="line"></span><br><span class="line">    printf (&quot;%lld&quot; , ans);</span><br><span class="line">   </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="后记分析"><a href="#后记分析" class="headerlink" title="后记分析"></a>后记分析</h1><pre><code>很像状压，陷进去可能出不来。对于状态的考虑很重要。dp时的小细节，不能出界。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动规笔记&quot;&gt;&lt;a href=&quot;#动规笔记&quot; class=&quot;headerlink&quot; title=&quot;动规笔记&quot;&gt;&lt;/a&gt;动规笔记&lt;/h1&gt;&lt;h2 id=&quot;————P2051-中国象棋&quot;&gt;&lt;a href=&quot;#————P2051-中国象棋&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="动规笔记" scheme="http://yoursite.com/tags/%E5%8A%A8%E8%A7%84%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
